{"version":3,"sources":["actions/categories.js","actions/itemsCategories.js","actions/userActions.js","components/Select.js","App.js","components/withHocMultiselect.js","components/Multiselect.js","reportWebVitals.js","reducers/categoriesReducer.js","reducers/itemsCategoriesReducer.js","reducers/userActionsReducer.js","store.js","index.js"],"names":["GET_CATEGOERIES","ADD_NEW_CATEGORY","REMOVE_CATEGORY","getCategories","dispatch","fetch","categories","then","response","ok","status","Error","JSON","parse","stringify","responseJSON","type","payload","addNewCategoryThunk","newCategory","id","flags","name","addNewCategory","Math","floor","Date","now","GET_ITEMS_CATEGORIES","GET_ITEM_ID","TO_DELETE_ITEMS","getItemsCategories","itemsCategories","items","USER_ACTIONS","SET_INPUT_VALUE","SET_SHOW_SELECT","changeShowSelect","showSelect","changeInputValue","inputValue","getInputValue","Select","props","itemId","useDispatch","useSelector","state","React","useState","itemsToDelete","setitemsToDelete","regexp","RegExp","useEffect","length","handleShowItem","itemName","getItemId","handleDeleteAllItems","console","log","itemsDelete","handleRemoveCategory","categoryId","removeCategory","handleGetItems","itemcontent","map","item","parent_id","push","className","onChange","prevItems","handleAddDeleteItems","filter","el","test","onClick","fixedWidth","icon","faTrashAlt","MultiselectHoc","Component","withHoc","placeholder","onFocus","e","value","target","replace","App","userActions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","persistConfig","key","storage","rootReducer","combineReducers","action","concat","category","indexOf","persistedReducer","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9ef7625.chunk.js","sourcesContent":["import categories from '../mocks/categories.json'\r\nexport const GET_CATEGOERIES = 'INITIAL:GET_CATEGORIES'\r\nexport const ADD_NEW_CATEGORY = 'INITIAL:ADD_NEW_CATEGORY'\r\nexport const REMOVE_CATEGORY = 'INITIAL:REMOVE_CATEGORY'\r\n\r\n\r\nexport const getCategoriesData = (categories) => ({\r\n    type: GET_CATEGOERIES,\r\n    payload: {\r\n        categories,\r\n    } \r\n})\r\n\r\nexport const addNewCategory = (id, newCategory, flags) => ({\r\n    type: ADD_NEW_CATEGORY,\r\n    payload: {\r\n        id: id,\r\n        name : newCategory,\r\n        flags : flags,\r\n    }\r\n})\r\n\r\nexport const removeCategory = (categoryId) => ({\r\n    type: REMOVE_CATEGORY,\r\n    payload: {\r\n        categoryId\r\n    }\r\n})\r\n\r\nexport const getCategories = () => {\r\n    return (dispatch) => {\r\n        fetch(categories)\r\n        .then((response) => {\r\n            if(!response.ok || response.status !== 200) {\r\n                throw Error(`it ain't work`)\r\n            }\r\n            return JSON.parse(JSON.stringify(categories))\r\n        }).then((responseJSON)=>{\r\n            \r\n            dispatch(getCategoriesData(responseJSON))\r\n        })\r\n    }\r\n}\r\n\r\nexport const addNewCategoryThunk = (newCategory) => {\r\n    \r\n    return (dispatch) => {\r\n\r\n        const newId = Math.floor(Date.now());\r\n        const flags = '';\r\n        dispatch(addNewCategory(newId, newCategory, flags))\r\n        \r\n    }\r\n    \r\n}\r\n\r\n\r\n","import itemsCategories from '../mocks/itemsCategories.json'\r\nexport const GET_ITEMS_CATEGORIES = 'INITIAL:GET_ITEMS_CATEGORIES'\r\nexport const GET_ITEM_ID = 'INITIAL:GET_ITEM_ID'\r\nexport const TO_DELETE_ITEMS = 'INITIAL:TO_DELETE_ITEMS'\r\n\r\n\r\nexport const getItemsCategoriesData = (items) => ({\r\n    type: GET_ITEMS_CATEGORIES,\r\n    payload: {\r\n        items,\r\n    } \r\n})\r\n\r\nexport const getItemId = (itemId) => ({\r\n    type: GET_ITEM_ID,\r\n    payload: {\r\n        itemId,\r\n    }\r\n})\r\n\r\nexport const toDeleteItems = (itemsDelete) => ({\r\n    type: TO_DELETE_ITEMS,\r\n    payload: {\r\n        itemsDelete,\r\n    }\r\n})\r\n\r\n// export const toDeleteItemsThunk = (itemsDelete) => {\r\n//     return (dispatch) => {\r\n//         dispatch(toDeleteItems(itemsDelete))\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport const getItemsCategories = () => {\r\n    return (dispatch) => {\r\n        \r\n        fetch(itemsCategories)\r\n        .then((response) => {\r\n            if(!response.ok || response.status !== 200) {\r\n                throw Error(`it ain't work`)\r\n            }\r\n            \r\n            return JSON.parse(JSON.stringify(itemsCategories))\r\n            \r\n        }).then((responseJSON)=>{\r\n            \r\n            dispatch(getItemsCategoriesData(responseJSON))\r\n        })\r\n    }\r\n}\r\n\r\n\r\n","export const USER_ACTIONS = 'INITIAL:USER_ACTIONS'\r\nexport const SET_INPUT_VALUE = 'INITIAL:SET_INPUT_VALUE'\r\nexport const SET_SHOW_SELECT = 'INITIAL:SET_SHOW_SELECT'\r\n\r\nexport const changeUserActions = (userActions, inputValue) => ({\r\n    type: USER_ACTIONS,\r\n    payload: {\r\n        userActions,\r\n    } \r\n})\r\n\r\nexport const getInputValue = (inputValue) => ({\r\n    type: SET_INPUT_VALUE,\r\n    payload: {\r\n        inputValue,\r\n    }\r\n})\r\n\r\nexport const changeShowSelect = (showSelect) => ({\r\n    type: SET_SHOW_SELECT,\r\n    payload: {\r\n        showSelect,\r\n    }\r\n})\r\n\r\n\r\nexport const changeInputValue = (inputValue) => {\r\n    return (dispatch) => {\r\n        dispatch(getInputValue(inputValue))\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCategories, removeCategory } from \"../actions/categories\";\r\nimport { getItemId, toDeleteItems, getItemsCategories} from \"../actions/itemsCategories\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nexport default function Select(props) {\r\n\r\n  const { showSelect, inputValue, itemId } = props;\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const categories = useSelector((state) => state.categories.categories)\r\n  const items  = useSelector((state) => state.itemsCategories.itemsCategories)\r\n  \r\n  const [itemsToDelete, setitemsToDelete] = React.useState([])\r\n  let regexp = new RegExp('^'+inputValue, 'i');\r\n\r\n  \r\n  React.useEffect(() =>{\r\n    if(categories.length === 0) {\r\n      dispatch(getCategories())\r\n    }\r\n    if(items.length === 0) {\r\n      dispatch(getItemsCategories())\r\n    }\r\n  }, [])\r\n\r\n  const handleShowItem = (itemName) => {\r\n    dispatch(getItemId(itemName))\r\n  }\r\n\r\n  const handleAddDeleteItems = (itemId) => {\r\n    setitemsToDelete(prevItems => {\r\n      return [\r\n        ...prevItems,\r\n        itemId\r\n      ]\r\n    })\r\n  }\r\n\r\n  const handleDeleteAllItems = (itemsToDelete) => {\r\n    console.log(itemsToDelete)\r\n    dispatch(toDeleteItems(itemsToDelete))\r\n    setitemsToDelete([])\r\n  }\r\n\r\n  const handleRemoveCategory = (categoryId) => {\r\n    dispatch(removeCategory(categoryId))\r\n  }\r\n  \r\n  const handleGetItems = (itemId) => {\r\n    let itemcontent = [];\r\n      items.map((item) => {\r\n        if(item.parent_id === itemId) {\r\n          itemcontent.push(\r\n            <div key={item.id} className={'item-content'}>\r\n              <div>{item.name}</div>\r\n              <input onChange={()=> handleAddDeleteItems(item.id)} type=\"checkbox\"/>\r\n            </div>)\r\n        } \r\n      })\r\n      \r\n      return itemcontent\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <div>\r\n        {showSelect ?  (\r\n        <div className={'dropdown'}>\r\n            {categories.filter(el => regexp.test(el.name)).map((item) => (\r\n              <div key={item.id}>\r\n                  <div onClick={()=>handleShowItem(item.id)} className={'dropdown-category'}>\r\n                    <span>{item.name}</span>\r\n                      <button  onClick={()=> handleRemoveCategory(item.id)}>\r\n                        <FontAwesomeIcon fixedWidth  icon={faTrashAlt} />\r\n                      </button>\r\n                  </div>\r\n                  {item.id == itemId ? \r\n                  handleGetItems(item.id) \r\n                  : null}\r\n              </div>\r\n              ))}\r\n              {itemsToDelete.length !== 0 ? \r\n              <button className={'button-del-all'} onClick={()=>handleDeleteAllItems(itemsToDelete)}>Delete items</button> \r\n              : null}\r\n          </div>\r\n          ) : null}\r\n          \r\n        </div>\r\n        \r\n      </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport Multiselect from './components/Multiselect';\nimport Select from './components/Select';\nimport withHoc from './components/withHocMultiselect';\nimport { changeShowSelect } from \"./actions/userActions\"\n\nconst MultiselectHoc = withHoc(Multiselect);\n\nfunction App() {\n  const dispatch = useDispatch()\n  const itemId = useSelector((state) => state.itemsCategories.itemId)\n  const inputValue = useSelector((state) => state.userActions.inputValue)\n  let showSelect = useSelector((state) => state.userActions.showSelect)\n  \n return (\n  <div  className={\"app\"}>\n    <div onClick={()=>dispatch(changeShowSelect(false))} className={'overlay'}></div>\n    <div className={'app-multiselect'}>\n        <MultiselectHoc  inputValue={inputValue} itemId={itemId} showSelect={showSelect}/>\n        <Select inputValue={inputValue} itemId={itemId} showSelect={showSelect}/>\n    </div>\n  </div>\n);\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nconst withHocMultiselect = (Component) => {\r\n    const NewComponent = (props) => {\r\n        return <Component {...props}/>\r\n    }\r\n    return NewComponent\r\n}\r\n\r\nexport default withHocMultiselect;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addNewCategoryThunk, } from \"../actions/categories\";\r\nimport { getItemsCategories } from \"../actions/itemsCategories\";\r\nimport { changeInputValue } from \"../actions/userActions\"\r\nimport { changeShowSelect } from \"../actions/userActions\"\r\n\r\nexport default function Multiselect(props){\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { inputValue, showSelect } = props\r\n    const items  = useSelector((state) => state.itemsCategories.itemsCategories)\r\n  \r\n    React.useEffect(() =>{\r\n      if(items.length === 0) {\r\n        dispatch(getItemsCategories())\r\n      }\r\n    }, [])\r\n    \r\n    //Сброс состояния input из LocalStorage\r\n    React.useEffect(()=>{\r\n      if(!showSelect) {\r\n        dispatch(changeShowSelect(false))\r\n      } dispatch(changeShowSelect(true))\r\n      \r\n    }, [dispatch, changeShowSelect])\r\n    \r\n    const handleAddCategory = (newCategory) => {\r\n      if(newCategory !== '') {\r\n        dispatch(addNewCategoryThunk(newCategory))\r\n        dispatch(changeInputValue(''))\r\n      }\r\n    }\r\n\r\n    const handleShowDropdown = (e) => {\r\n      dispatch(changeShowSelect(true))\r\n    }\r\n\r\n    const handleSetInputValue = (e) => {\r\n      dispatch(changeInputValue(e.target.value.replace(/[^0-9a-zA-ZёЁа-яА-Я\\s-]/g,'')))\r\n    }\r\n\r\n    return (\r\n      <div className={'multiselect'}>\r\n        <input className={'input'} placeholder={\"Поиск категории\"}  onFocus={handleShowDropdown} value={inputValue} onChange={handleSetInputValue}/>\r\n        <button className={'input-button'} onClick={()=>handleAddCategory(inputValue)}>Add category</button>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_CATEGOERIES, ADD_NEW_CATEGORY, REMOVE_CATEGORY } from \"../actions/categories\";\r\n\r\nconst initialState = {\r\n    categories: []\r\n}\r\n\r\nexport default function categoriesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_CATEGOERIES:\r\n            if(state.categories.length === 0) {\r\n                return {\r\n                    ...state,\r\n                    categories: action.payload.categories\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state\r\n                }\r\n            }\r\n        case ADD_NEW_CATEGORY:\r\n            return { \r\n                ...state, \r\n                categories: state.categories.concat(action.payload)\r\n            }\r\n        case REMOVE_CATEGORY:\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                categories: state.categories.filter(category => category.id !== action.payload.categoryId)\r\n            }\r\n            default:\r\n                return state\r\n    }\r\n}","import { GET_ITEMS_CATEGORIES } from \"../actions/itemsCategories\";\r\nimport { GET_ITEM_ID } from \"../actions/itemsCategories\";\r\nimport { TO_DELETE_ITEMS } from \"../actions/itemsCategories\"\r\n\r\nconst initialState = {\r\n    itemsCategories: [],\r\n    itemName: '',\r\n    itemsDelete: []\r\n}\r\n\r\nexport default function itemsCategoriesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ITEMS_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                itemsCategories: action.payload.items\r\n            }\r\n        case GET_ITEM_ID:\r\n            return {\r\n                ...state,\r\n                itemId: action.payload.itemId\r\n            }\r\n        case TO_DELETE_ITEMS:\r\n            return {\r\n                itemsCategories: state.itemsCategories.filter(el => {\r\n                    return action.payload.itemsDelete.indexOf(el.id) === -1;\r\n                })\r\n            }\r\n            default:\r\n                return state\r\n    }\r\n}","import { USER_ACTIONS } from \"../actions/userActions\";\r\nimport { SET_INPUT_VALUE } from \"../actions/userActions\"\r\nimport { SET_SHOW_SELECT } from \"../actions/userActions\"\r\n\r\nconst initialState = {\r\n    userActions: [],\r\n    inputValue: '',\r\n    showSelect: false,\r\n}\r\n\r\nexport default function userActionsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_ACTIONS:\r\n            return {\r\n                ...state,\r\n                userActions: action.payload.userActions,\r\n            }\r\n        case SET_INPUT_VALUE:\r\n            return {\r\n                ...state,\r\n                inputValue: action.payload.inputValue\r\n            }\r\n        case SET_SHOW_SELECT:\r\n            return {\r\n                ...state,\r\n                showSelect: action.payload.showSelect\r\n            }\r\n        default:\r\n                return state\r\n    }\r\n}","import { combineReducers, createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistStore, persistReducer} from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage'\r\nimport categoriesReducer from \"./reducers/categoriesReducer\";\r\nimport itemsCategoriesReducer from \"./reducers/itemsCategoriesReducer\";\r\nimport userActionsReducer from \"./reducers/userActionsReducer\";\r\n\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    categories: categoriesReducer,\r\n    itemsCategories: itemsCategoriesReducer,\r\n    userActions: userActionsReducer,\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore (\r\n    persistedReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)\r\n\r\nexport const persistor = persistStore(store)\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './store'\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}